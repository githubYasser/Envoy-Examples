static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/service/1"
                redirect:
                  path_redirect: "/service/1"
                  host_redirect: "localhost"
                  https_redirect: true
              - match:
                  prefix: "/service/2"
                redirect:
                  path_redirect: "/service/2"
                  host_redirect: "localhost"
                  https_redirect: true
          http_filters:
          - name: envoy.router
            config: {} 
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 443
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/service/1"
                route:
                  cluster: service1
              - match:
                  prefix: "/service/2"
                route:
                  cluster: service2
          forward_client_cert_details: APPEND_FORWARD
          set_current_client_cert_details:
            subject: true
            cert: true
            dns: true
            uri: true
          http_filters:
          - name: envoy.ext_authz
            config:
              http_service:
                server_uri:
                  uri: "blalbla"
                  cluster: ext-authz
                  timeout: 10s
                path_prefix: "/auth/cert"
                allowed_request_headers: ["x-forwarded-client-cert"]
          - name: envoy.filters.http.jwt_authn
            config:
              providers:
                provider1:
                  issuer: testing@secure.istio.io
                  #local_jwks: { "filename": "/usr/local/jwks.json" }
                  local_jwks:
                    inline_string: '{ "keys":[ {"e":"AQAB","kid":"DHFbpoIUqrY8t2zpA2qXfCmr5VO5ZEr4RzHU_-envvQ","kty":"RSA","n":"xAE7eB6qugXyCAG3yhh7pkDkT65pHymX-P7KfIupjf59vsdo91bSP9C8H07pSAGQO1MV_xFj9VswgsCg4R6otmg5PV2He95lZdHtOcU5DXIg_pbhLdKXbi66GlVeK6ABZOUW3WYtnNHD-91gVuoeJT_DwtGGcp4ignkgXfkiEm4sw-4sfb4qdt5oLbyVpmW6x9cfa7vs2WTfURiCrBoUqgBo_-4WTiULmmHSGZHOjzwa8WtrtOQGsAFjIbno85jp6MnGGGZPYZbDAa_b3y5u-YpW7ypZrvD8BgtKVjgtQgZhLAGezMt0ua3DRrWnKqTZ0BJ_EyxOGuHJrLsn00fnMQ"}]}'
              rules:
              - match:
                  prefix: /service/1
                requires:
                  provider_name: provider1
          - name: envoy.router
            config: {}
      tls_context:
        common_tls_context:
          tls_certificates:
            certificate_chain: { "filename": "/usr/local/front.server.cert.pem" }
            private_key: { "filename": "/usr/local/front.server.key.pem" }
          validation_context:
            trusted_ca: { "filename": "/usr/local/ca-chain.cert.pem" }
        require_client_certificate: true
  clusters:
  - name: ext-authz
    connect_timeout: 15.0s
    type: strict_dns
    lb_policy: round_robin
    hosts:
      - socket_address:
          address: springboot
          port_value: 8090
  - name: service1
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    hosts:
    - socket_address:
        address: service1
        port_value: 80 
    tls_context:
      common_tls_context:
        tls_certificates:
          certificate_chain: { "filename": "/usr/local/client.cert.pem" }
          private_key: { "filename": "/usr/local/client.key.pem" } 
        validation_context:
           trusted_ca: { "filename": "/usr/local/ca-chain.cert.pem" }  
  - name: service2
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    hosts:
    - socket_address:
        address: service2
        port_value: 80
    tls_context:
      common_tls_context:
        tls_certificates:
          certificate_chain: { "filename": "/usr/local/client.cert.pem" }
          private_key: { "filename": "/usr/local/client.key.pem" } 
        validation_context:
           trusted_ca: { "filename": "/usr/local/ca-chain.cert.pem" }  
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
