static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/service/1"
                redirect:
                  path_redirect: "/service/1"
                  host_redirect: "localhost"
                  https_redirect: true
              - match:
                  prefix: "/service/2"
                redirect:
                  path_redirect: "/service/2"
                  host_redirect: "localhost"
                  https_redirect: true
          http_filters:
          - name: envoy.router
            config: {}
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 443
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/service/1"
                route:
                  cluster: service1
              - match:
                  prefix: "/service/2"
                route:
                  cluster: service2
          http_filters:
          - name: envoy.router
            config: {}
      tls_context:
        common_tls_context:
          tls_certificates:
            certificate_chain: { "filename": "/usr/local/front.server.cert.pem" }
            private_key: { "filename": "/usr/local/front.server.key.pem" }
          validation_context:
            trusted_ca: { "filename": "/usr/local/ca-chain.cert.pem" }
        require_client_certificate: true
  clusters:
  - name: service1
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    hosts:
    - socket_address:
        address: service1
        port_value: 80 
    tls_context:
      common_tls_context:
        tls_certificates:
          certificate_chain: { "filename": "/usr/local/client.cert.pem" }
          private_key: { "filename": "/usr/local/client.key.pem" } 
        validation_context:
           trusted_ca: { "filename": "/usr/local/ca-chain.cert.pem" }  
  - name: service2
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    http2_protocol_options: {}
    hosts:
    - socket_address:
        address: service2
        port_value: 80
    #tls_context:
      #common_tls_context:
        #tls_certificates:
          #certificate_chain: { "filename": "/usr/local/client.cert.pem" }
          #private_key: { "filename": "/usr/local/client.key.pem" } 
        #validation_context:
           #trusted_ca: { "filename": "/usr/local/ca-chain.cert.pem" }  
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
